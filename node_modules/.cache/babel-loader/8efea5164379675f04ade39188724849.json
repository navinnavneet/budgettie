{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../Utility/Utility';\nconst initialState = {\n  data: {\n    inc: {\n      description: null,\n      value: null,\n      type: 'inc'\n    },\n    exp: {\n      description: null,\n      value: null,\n      type: 'exp'\n    }\n  },\n  showSummary: false\n};\n\nconst takeInput = (state, action) => {\n  const updatedIncExp = updateObject(state.data[action.payLoad.incExp], {\n    [action.payLoad.type]: action.payLoad.event.target.value\n  });\n  const updatedData = updateObject(state.data, {\n    [action.payLoad.incExp]: updatedIncExp\n  });\n  return updateObject(state, {\n    data: updatedData,\n    event: action.payLoad.event\n  });\n};\n\nconst hideSummary = (state, action) => {\n  return updateObject(state, {\n    showSummary: false\n  });\n};\n\nconst showSummary = (state, action) => {\n  return updateObject(state, {\n    showSummary: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TAKE_INPUT:\n      return takeInput(state, action);\n\n    case actionTypes.SHOW_SUMMARY:\n      return showSummary(state, action);\n\n    case actionTypes.HIDE_SUMMARY:\n      return hideSummary(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/navin/React-tuorial-1/budgettie/src/store/reducers/budgetBuilder.js"],"names":["actionTypes","updateObject","initialState","data","inc","description","value","type","exp","showSummary","takeInput","state","action","updatedIncExp","payLoad","incExp","event","target","updatedData","hideSummary","reducer","TAKE_INPUT","SHOW_SUMMARY","HIDE_SUMMARY"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,MAAMC,YAAY,GAAG;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE;AACDC,MAAAA,WAAW,EAAE,IADZ;AAEDC,MAAAA,KAAK,EAAE,IAFN;AAGDC,MAAAA,IAAI,EAAE;AAHL,KADH;AAMFC,IAAAA,GAAG,EAAE;AACDH,MAAAA,WAAW,EAAE,IADZ;AAEDC,MAAAA,KAAK,EAAE,IAFN;AAGDC,MAAAA,IAAI,EAAE;AAHL;AANH,GADO;AAabE,EAAAA,WAAW,EAAE;AAbA,CAArB;;AAgBA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,QAAMC,aAAa,GAAGZ,YAAY,CAACU,KAAK,CAACR,IAAN,CAAWS,MAAM,CAACE,OAAP,CAAeC,MAA1B,CAAD,EAAoC;AAC1D,KAACH,MAAM,CAACE,OAAP,CAAeP,IAAhB,GAAuBK,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBC,MAArB,CAA4BX;AADO,GAApC,CAAlC;AAGQ,QAAMY,WAAW,GAAGjB,YAAY,CAACU,KAAK,CAACR,IAAP,EAAa;AACzC,KAACS,MAAM,CAACE,OAAP,CAAeC,MAAhB,GAAyBF;AADgB,GAAb,CAAhC;AAGA,SAAOZ,YAAY,CAACU,KAAD,EAAQ;AACvBR,IAAAA,IAAI,EAAEe,WADiB;AAEvBF,IAAAA,KAAK,EAAEJ,MAAM,CAACE,OAAP,CAAeE;AAFC,GAAR,CAAnB;AAIX,CAXD;;AAcA,MAAMG,WAAW,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAOX,YAAY,CAACU,KAAD,EAAQ;AACvBF,IAAAA,WAAW,EAAE;AADU,GAAR,CAAnB;AAGH,CAJD;;AAMA,MAAMA,WAAW,GAAG,CAACE,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAOX,YAAY,CAACU,KAAD,EAAQ;AACvBF,IAAAA,WAAW,EAAE;AADU,GAAR,CAAnB;AAGH,CAJD;;AAMA,MAAMW,OAAO,GAAG,CAACT,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKP,WAAW,CAACqB,UAAjB;AAA6B,aAAOX,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAE7B,SAAKZ,WAAW,CAACsB,YAAjB;AAA+B,aAAOb,WAAW,CAACE,KAAD,EAAQC,MAAR,CAAlB;;AAE/B,SAAKZ,WAAW,CAACuB,YAAjB;AAA+B,aAAOJ,WAAW,CAACR,KAAD,EAAQC,MAAR,CAAlB;;AAE/B;AAAS,aAAOD,KAAP;AAPb;AASH,CAVD;;AAYA,eAAeS,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../Utility/Utility';\n\nconst initialState = {\n        data: { \n            inc: {\n                description: null,\n                value: null,\n                type: 'inc'\n            },\n            exp: {\n                description: null,\n                value: null,\n                type: 'exp'\n            }\n        },\n        showSummary: false\n    }\n\nconst takeInput = (state, action) => {\n    const updatedIncExp = updateObject(state.data[action.payLoad.incExp], {\n                [action.payLoad.type]: action.payLoad.event.target.value\n            });\n            const updatedData = updateObject(state.data, {\n                [action.payLoad.incExp]: updatedIncExp\n            });\n            return updateObject(state, {\n                data: updatedData,\n                event: action.payLoad.event\n            });\n}\n\n\nconst hideSummary = (state, action) => {\n    return updateObject(state, {\n        showSummary: false\n    });\n}\n\nconst showSummary = (state, action) => {\n    return updateObject(state, {\n        showSummary: true\n    });\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TAKE_INPUT: return takeInput(state, action);\n\n        case actionTypes.SHOW_SUMMARY: return showSummary(state, action);\n\n        case actionTypes.HIDE_SUMMARY: return hideSummary(state, action);\n\n        default: return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}