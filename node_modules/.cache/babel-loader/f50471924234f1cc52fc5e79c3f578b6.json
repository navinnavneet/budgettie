{"ast":null,"code":"var _jsxFileName = \"/home/navin/React-tuorial-1/budgettie/src/containers/BudgetBuilder/BuildControl/BuildControl.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './BuildControl.module.css';\nimport Input from '../../../components/UI/Input/Input';\nimport Card from '../../../components/UI/Card/Card';\nimport Button from '../../../components/UI/Button/Button';\nimport { takeInput, addItem, switchIncExp } from '../../../store/actions/budgetBuilder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BuildControl extends Component {\n  render() {\n    let inputCard = null;\n\n    if (this.props.isIncome) {\n      inputCard = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.IncExp,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: event => {\n              event.preventDefault();\n              event.stopPropagation();\n              return this.props.onAddItem(this.props.exp, event);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"INCOME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              inputType: \"description\",\n              value: this.props.inc.description,\n              changed: event => this.props.onChange(event, 'inc', 'description')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              inputType: \"value\",\n              value: this.props.inc.value,\n              changed: event => this.props.onChange(event, 'inc', 'value')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    } else {\n      inputCard = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.IncExp,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: event => {\n              event.preventDefault();\n              event.stopPropagation();\n              return this.props.onAddItem(this.props.exp, event);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"EXPENSES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              inputType: \"description\",\n              value: this.props.exp.description,\n              changed: event => this.props.onChange(event, 'exp', 'description')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              inputType: \"value\",\n              value: this.props.exp.value,\n              changed: event => this.props.onChange(event, 'exp', 'value')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.BuildControl,\n      children: [inputCard, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.Button,\n        onClick: this.props.onSwitchIncExp,\n        children: this.props.isIncome ? 'switch to expenses' : 'switch to income'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst matchStateToProps = state => {\n  return {\n    inc: state.budgetBuilder.data.inc,\n    exp: state.budgetBuilder.data.exp,\n    isIncome: state.budgetBuilder.isIncome\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: (event, incExp, type) => dispatch(takeInput(event, incExp, type)),\n    onAddItem: data => dispatch(addItem(data)),\n    onSwitchIncExp: () => dispatch(switchIncExp())\n  };\n};\n\nexport default connect(matchStateToProps, mapDispatchToProps)(BuildControl);","map":{"version":3,"sources":["/home/navin/React-tuorial-1/budgettie/src/containers/BudgetBuilder/BuildControl/BuildControl.js"],"names":["React","Component","connect","classes","Input","Card","Button","takeInput","addItem","switchIncExp","BuildControl","render","inputCard","props","isIncome","IncExp","event","preventDefault","stopPropagation","onAddItem","exp","inc","description","onChange","value","onSwitchIncExp","matchStateToProps","state","budgetBuilder","data","mapDispatchToProps","dispatch","incExp","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './BuildControl.module.css';\nimport Input from '../../../components/UI/Input/Input';\nimport Card from '../../../components/UI/Card/Card';\nimport Button from '../../../components/UI/Button/Button';\nimport { takeInput, addItem, switchIncExp } from '../../../store/actions/budgetBuilder';\n\nclass BuildControl extends Component {\n\n    render () {\n\n        let inputCard = null;\n        if (this.props.isIncome) {\n            inputCard = (\n                <div className={classes.IncExp}>\n                    <Card>\n                        <form onSubmit={(event) => {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            return this.props.onAddItem(this.props.exp, event)\n                                }}>\n                            <h2>INCOME</h2>\n                            <Input inputType='description' \n                                value={this.props.inc.description}\n                                changed={(event) => this.props.onChange(event, 'inc', 'description')} />\n                            <Input inputType='value'\n                                value={this.props.inc.value}\n                                changed={(event) => this.props.onChange(event, 'inc', 'value')} />\n                            <Button>add</Button>\n                        </form>\n                    </Card>\n                </div>\n            );\n        } else {\n            inputCard = (\n                <div className={classes.IncExp}>\n                    <Card>\n                        <form onSubmit={(event) => {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            return this.props.onAddItem(this.props.exp, event)\n                                }}>\n                            <h2>EXPENSES</h2>\n                            <Input inputType='description'\n                                value={this.props.exp.description}\n                                changed={(event) => this.props.onChange(event, 'exp',  'description')} />\n                            <Input inputType='value'\n                                value={this.props.exp.value}\n                                changed={(event) => this.props.onChange(event, 'exp', 'value')} />\n                            <Button>add</Button>\n                        </form>    \n                    </Card>\n                </div>\n            );\n        }\n\n        return (\n            <div className={classes.BuildControl}>\n                {inputCard}\n                <button \n                    className={classes.Button}\n                    onClick={this.props.onSwitchIncExp} >\n                    {this.props.isIncome ? 'switch to expenses' : 'switch to income'}\n                </button>\n            </div>\n        );\n    }\n} \n\nconst matchStateToProps = state => {\n    return {\n        inc: state.budgetBuilder.data.inc,\n        exp: state.budgetBuilder.data.exp,\n        isIncome: state.budgetBuilder.isIncome\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onChange: (event, incExp, type) => dispatch(takeInput(event, incExp, type)),\n        onAddItem: (data) => dispatch(addItem(data)),\n        onSwitchIncExp: () => dispatch(switchIncExp())\n    }\n}\n\n\nexport default connect(matchStateToProps, mapDispatchToProps)(BuildControl);\n"]},"metadata":{},"sourceType":"module"}