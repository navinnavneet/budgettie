{"ast":null,"code":"export const updateObject = (oldObject, updatedProperties) => {\n  return { ...oldObject,\n    ...updatedProperties\n  };\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (rules.required) {\n    isValid = value.trim().length !== 0 && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.trim().length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.trim().length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\nexport const percentageCalculator = (expense, totalIncome) => {\n  return Math.round(expense / totalIncome * 100);\n};","map":{"version":3,"sources":["/home/navin/React-tuorial-1/budgettie/src/Utility/Utility.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","length","minLength","maxLength","isEmail","pattern","test","isNumeric","percentageCalculator","expense","totalIncome","Math","round"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,SAAD,EAAYC,iBAAZ,KAAkC;AAC1D,SAAO,EACH,GAAGD,SADA;AAEH,OAAGC;AAFA,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvC,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAGD,KAAK,CAACE,QAAT,EAAmB;AACfD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,GAAaC,MAAb,KAAwB,CAAxB,IAA6BH,OAAvC;AACH;;AACD,MAAGD,KAAK,CAACK,SAAT,EAAoB;AAChBJ,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,GAAaC,MAAb,IAAuBJ,KAAK,CAACK,SAA7B,IAA0CJ,OAApD;AACH;;AACD,MAAID,KAAK,CAACM,SAAV,EAAqB;AACjBL,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,GAAaC,MAAb,IAAuBJ,KAAK,CAACM,SAA7B,IAA0CL,OAApD;AACH;;AACD,MAAID,KAAK,CAACO,OAAV,EAAmB;AACf,UAAMC,OAAO,GAAG,uIAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AAED,MAAID,KAAK,CAACU,SAAV,EAAqB;AACjB,UAAMF,OAAO,GAAG,OAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AAED,SAAOA,OAAP;AACH,CAvBE;AAyBH,OAAO,MAAMU,oBAAoB,GAAG,CAACC,OAAD,EAAUC,WAAV,KAA0B;AAC1D,SAAOC,IAAI,CAACC,KAAL,CAAYH,OAAO,GAAGC,WAAX,GAA0B,GAArC,CAAP;AACH,CAFM","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity = (value, rules) => {\n        let isValid = true;\n\n        if(rules.required) {\n            isValid = value.trim().length !== 0 && isValid;\n        }\n        if(rules.minLength) {\n            isValid = value.trim().length >= rules.minLength && isValid;\n        }\n        if (rules.maxLength) {\n            isValid = value.trim().length <= rules.maxLength && isValid;\n        }\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    export const percentageCalculator = (expense, totalIncome) => {\n        return Math.round((expense / totalIncome) * 100);\n    }"]},"metadata":{},"sourceType":"module"}