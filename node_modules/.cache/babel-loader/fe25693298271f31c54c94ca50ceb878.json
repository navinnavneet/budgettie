{"ast":null,"code":"var _jsxFileName = \"/home/navin/React-tuorial-1/budgettie/src/containers/BudgetBuilder/BudgetBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Budget from '../../components/budget/Budget';\nimport BuildControl from './BuildControl/BuildControl';\nimport { updateObject } from '../../Utility/Utility';\nimport Modal from '../../components/UI/Modal/Modal';\nimport ExpSummary from '../../components/BudgetSummary/ExpSummary/ExpSummary';\nimport Button from '../../components/UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BudgetBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      budgetSummary: {\n        inc: [],\n        exp: []\n      },\n      totalBudget: 0,\n      totalIncome: 0,\n      totalExpenses: 0,\n      showSummary: false\n    };\n\n    this.addSummaryHandler = data => {\n      let id;\n\n      if (this.state.budgetSummary[data.type].length === 0) {\n        id = 0;\n      } else {\n        id = this.state.budgetSummary[data.type][this.state.budgetSummary[data.type].length - 1].id + 1;\n      }\n\n      const summary = {\n        des: data.description,\n        val: parseFloat(data.value).toFixed(2),\n        id: id\n      };\n      const updatedIncExp = [...this.state.budgetSummary[data.type]];\n      updatedIncExp.push(summary);\n      const updatedBudgetSummary = updateObject(this.state.budgetSummary, {\n        [data.type]: updatedIncExp\n      });\n      let budget = this.state.totalBudget;\n      let income = this.state.totalIncome;\n      let expense = this.state.totalExpenses;\n\n      if (data.type === 'inc') {\n        budget = budget + parseFloat(data.value);\n        income = income + parseFloat(data.value);\n      }\n\n      if (data.type === 'exp') {\n        budget = budget - parseFloat(data.value);\n        expense = expense + parseFloat(data.value);\n      }\n\n      this.setState({\n        budgetSummary: updatedBudgetSummary,\n        totalBudget: budget,\n        totalIncome: income,\n        totalExpenses: expense\n      });\n    };\n\n    this.showSummaryHandler = () => {\n      this.setState({\n        showSummary: true\n      });\n    };\n\n    this.hideSummaryHandler = () => {\n      this.setState({\n        showSummary: false\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.showSummary,\n        modalClosed: this.hideSummaryHandler,\n        children: /*#__PURE__*/_jsxDEV(ExpSummary, {\n          incomeSummary: this.state.budgetSummary.inc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Budget, {\n        totalBudget: this.state.totalBudget,\n        totalIncome: this.state.totalIncome,\n        totalExpenses: this.state.totalExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControl, {\n        clicked: data => this.addSummaryHandler(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        clicked: this.showSummaryHandler,\n        children: \"Show Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BudgetBuilder;","map":{"version":3,"sources":["/home/navin/React-tuorial-1/budgettie/src/containers/BudgetBuilder/BudgetBuilder.js"],"names":["React","Component","Aux","Budget","BuildControl","updateObject","Modal","ExpSummary","Button","BudgetBuilder","state","budgetSummary","inc","exp","totalBudget","totalIncome","totalExpenses","showSummary","addSummaryHandler","data","id","type","length","summary","des","description","val","parseFloat","value","toFixed","updatedIncExp","push","updatedBudgetSummary","budget","income","expense","setState","showSummaryHandler","hideSummaryHandler","componentDidUpdate","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,UAAP,MAAuB,sDAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;;AAGA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCS,KAFkC,GAE1B;AACJC,MAAAA,aAAa,EAAE;AACXC,QAAAA,GAAG,EAAE,EADM;AAEXC,QAAAA,GAAG,EAAE;AAFM,OADX;AAKJC,MAAAA,WAAW,EAAE,CALT;AAMJC,MAAAA,WAAW,EAAE,CANT;AAOJC,MAAAA,aAAa,EAAE,CAPX;AAQJC,MAAAA,WAAW,EAAE;AART,KAF0B;;AAAA,SAalCC,iBAbkC,GAadC,IAAI,IAAI;AACxB,UAAIC,EAAJ;;AACA,UAAI,KAAKV,KAAL,CAAWC,aAAX,CAAyBQ,IAAI,CAACE,IAA9B,EAAoCC,MAApC,KAA+C,CAAnD,EAAsD;AAClDF,QAAAA,EAAE,GAAG,CAAL;AACH,OAFD,MAEO;AACHA,QAAAA,EAAE,GAAG,KAAKV,KAAL,CAAWC,aAAX,CAAyBQ,IAAI,CAACE,IAA9B,EAAoC,KAAKX,KAAL,CAAWC,aAAX,CAAyBQ,IAAI,CAACE,IAA9B,EAAoCC,MAApC,GAA6C,CAAjF,EAAoFF,EAApF,GAAyF,CAA9F;AACH;;AACD,YAAMG,OAAO,GAAG;AACJC,QAAAA,GAAG,EAAEL,IAAI,CAACM,WADN;AAEJC,QAAAA,GAAG,EAAEC,UAAU,CAACR,IAAI,CAACS,KAAN,CAAV,CAAuBC,OAAvB,CAA+B,CAA/B,CAFD;AAGJT,QAAAA,EAAE,EAAEA;AAHA,OAAhB;AAMA,YAAMU,aAAa,GAAG,CAClB,GAAG,KAAKpB,KAAL,CAAWC,aAAX,CAAyBQ,IAAI,CAACE,IAA9B,CADe,CAAtB;AAIAS,MAAAA,aAAa,CAACC,IAAd,CAAmBR,OAAnB;AAEA,YAAMS,oBAAoB,GAAG3B,YAAY,CAAC,KAAKK,KAAL,CAAWC,aAAZ,EAA0B;AAC/D,SAACQ,IAAI,CAACE,IAAN,GAAaS;AADkD,OAA1B,CAAzC;AAIA,UAAIG,MAAM,GAAG,KAAKvB,KAAL,CAAWI,WAAxB;AACA,UAAIoB,MAAM,GAAG,KAAKxB,KAAL,CAAWK,WAAxB;AACA,UAAIoB,OAAO,GAAG,KAAKzB,KAAL,CAAWM,aAAzB;;AAEA,UAAIG,IAAI,CAACE,IAAL,KAAc,KAAlB,EAAyB;AACrBY,QAAAA,MAAM,GAAGA,MAAM,GAAGN,UAAU,CAACR,IAAI,CAACS,KAAN,CAA5B;AACAM,QAAAA,MAAM,GAAGA,MAAM,GAAGP,UAAU,CAACR,IAAI,CAACS,KAAN,CAA5B;AACH;;AAED,UAAIT,IAAI,CAACE,IAAL,KAAc,KAAlB,EAAyB;AACrBY,QAAAA,MAAM,GAAGA,MAAM,GAAGN,UAAU,CAACR,IAAI,CAACS,KAAN,CAA5B;AACAO,QAAAA,OAAO,GAAGA,OAAO,GAAGR,UAAU,CAACR,IAAI,CAACS,KAAN,CAA9B;AACH;;AAED,WAAKQ,QAAL,CAAc;AACVzB,QAAAA,aAAa,EAAEqB,oBADL;AAEVlB,QAAAA,WAAW,EAAEmB,MAFH;AAGVlB,QAAAA,WAAW,EAAEmB,MAHH;AAIVlB,QAAAA,aAAa,EAAEmB;AAJL,OAAd;AAOH,KAzDiC;;AAAA,SA2DlCE,kBA3DkC,GA2Db,MAAM;AACvB,WAAKD,QAAL,CAAc;AAACnB,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH,KA7DiC;;AAAA,SA+DlCqB,kBA/DkC,GA+Db,MAAM;AACvB,WAAKF,QAAL,CAAc;AAACnB,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH,KAjEiC;AAAA;;AAmElCsB,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAjB;AACH;;AAEDgC,EAAAA,MAAM,GAAI;AACN,wBACI,QAAC,GAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWO,WAAxB;AAAqC,QAAA,WAAW,EAAE,KAAKqB,kBAAvD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,aAAa,EAAE,KAAK5B,KAAL,CAAWC,aAAX,CAAyBC;AAApD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AACA,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWI,WADxB;AAEA,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAFxB;AAGA,QAAA,aAAa,EAAE,KAAKL,KAAL,CAAWM;AAH1B;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI,QAAC,YAAD;AACA,QAAA,OAAO,EAAGG,IAAD,IAAU,KAAKD,iBAAL,CAAuBC,IAAvB;AADnB;AAAA;AAAA;AAAA;AAAA,cARJ,eAUI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKkB,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAtFiC;;AAyFtC,eAAe5B,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Budget from '../../components/budget/Budget';\nimport BuildControl from './BuildControl/BuildControl';\nimport { updateObject } from '../../Utility/Utility';\nimport Modal from '../../components/UI/Modal/Modal';\nimport ExpSummary from '../../components/BudgetSummary/ExpSummary/ExpSummary';\nimport Button from '../../components/UI/Button/Button';\n\n\nclass BudgetBuilder extends Component {\n\n    state = {\n        budgetSummary: {\n            inc: [],\n            exp: []\n        },\n        totalBudget: 0,\n        totalIncome: 0,\n        totalExpenses: 0,\n        showSummary: false\n    }\n\n    addSummaryHandler = data => {\n        let id;\n        if (this.state.budgetSummary[data.type].length === 0) {\n            id = 0;\n        } else {\n            id = this.state.budgetSummary[data.type][this.state.budgetSummary[data.type].length - 1].id + 1;\n        }\n        const summary = {\n                    des: data.description, \n                    val: parseFloat(data.value).toFixed(2),\n                    id: id\n                };\n\n        const updatedIncExp = [ \n            ...this.state.budgetSummary[data.type] \n            ];\n\n        updatedIncExp.push(summary);\n\n        const updatedBudgetSummary = updateObject(this.state.budgetSummary,{\n            [data.type]: updatedIncExp\n        });\n\n        let budget = this.state.totalBudget;\n        let income = this.state.totalIncome;\n        let expense = this.state.totalExpenses;\n\n        if (data.type === 'inc') {\n            budget = budget + parseFloat(data.value);\n            income = income + parseFloat(data.value);\n        }\n\n        if (data.type === 'exp') {\n            budget = budget - parseFloat(data.value);\n            expense = expense + parseFloat(data.value);\n        }\n\n        this.setState({\n            budgetSummary: updatedBudgetSummary,\n            totalBudget: budget,\n            totalIncome: income,\n            totalExpenses: expense\n        });\n        \n    }\n\n    showSummaryHandler = () => {\n        this.setState({showSummary: true});\n    }\n\n    hideSummaryHandler = () => {\n        this.setState({showSummary: false});\n    }\n\n    componentDidUpdate() {\n        console.log(this.state);\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Modal show={this.state.showSummary} modalClosed={this.hideSummaryHandler}>\n                    <ExpSummary incomeSummary={this.state.budgetSummary.inc} />\n                </Modal> \n                <Budget\n                totalBudget={this.state.totalBudget}\n                totalIncome={this.state.totalIncome}\n                totalExpenses={this.state.totalExpenses} />\n                <BuildControl \n                clicked={(data) => this.addSummaryHandler(data)} />\n                <Button clicked={this.showSummaryHandler}>Show Summary</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default BudgetBuilder;"]},"metadata":{},"sourceType":"module"}